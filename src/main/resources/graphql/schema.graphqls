scalar Object

type Query {
  accessRights: [AccessRight!]!
  accessRightByCode(code: String!): AccessRight

  apiSpecifications: [ApiSpecification!]!
  apiSpecificationByCode(code: String!): ApiSpecification

  apiStatuses: [ApiStatus!]!
  apiStatusByCode(code: String!): ApiStatus

  dataThemes: [DataTheme!]!
  dataThemeByCode(code: String!): DataTheme

  distributionTypes: [DistributionType!]!
  distributionTypeByCode(code: String!): DistributionType

  euroVocs:  [EuroVoc!]!
  euroVocByCode(code: String!):  EuroVoc

  fileTypes:  [FileType!]!
  fileTypeByCode(code: String!):  FileType

  frequencies: [Frequency!]!
  frequencyByCode(code: String!): Frequency

  linguisticSystems: [LinguisticSystem!]!
  linguisticSystemByCode(code: String!): LinguisticSystem

  losThemesAndWords(uris: [String!]):  [LosNode!]!

  mainActivities: [MainActivity!]!
  mainActivityByCode(code: String!): MainActivity

  mediaTypes: [MediaType!]!
  mediaTypesByType(type: String!): [MediaType!]!
  mediaTypeByTypeAndSubType(type: String!, subType: String!): MediaType

  nasjoner: [Nasjon!]!
  nasjonByNasjonsnummer(nasjonsnummer: String!): Nasjon

  fylker: [Fylke!]!
  fylkeByFylkesnummer(fylkesnummer: String!): Fylke

  kommuner: [Kommune!]!
  kommuneByKommunenummer(kommunenummer: String!): Kommune

  openLicenses: [OpenLicense!]!
  openLicenseByCode(code: String!): OpenLicense

  provenanceStatements: [ProvenanceStatement!]!
  provenanceStatementByCode(code: String!): ProvenanceStatement

  referenceTypes: [ReferenceType!]!
  referenceTypeByCode(code: String!): ReferenceType

  roleTypes: [RoleType!]!
  roleTypeByCode(code: String!): RoleType

  serviceChannelTypes: [ServiceChannelType!]!
  serviceChannelTypeByCode(code: String!): ServiceChannelType
}

type AccessRight {
  uri: ID!
  code: String
  label: Object
}

type ApiSpecification {
  uri: ID!
  source: String
  code: String
  label: Object
}

type ApiStatus {
  uri: ID!
  code: String
  label: Object
}

type DataTheme {
  uri: ID!
  code: String
  label: Object
  startUse: String
}

type DistributionType {
  uri: ID!
  code: String
  label: Object
  startUse: String
}

type EuroVoc {
  uri: ID!
  code: String
  label: Object
}

type FileType {
  uri: ID!
  code: String
  mediaType: String
}

type Frequency {
  uri: ID!
  code: String
  label: Object
}

type LinguisticSystem {
  uri: ID!
  code: String
  label: Object
}

type LosNode {
  uri: ID!
  children: [String!]
  parents: [String!]
  isTheme: Boolean!
  losPaths: [String!]
  name: Object
  definition: Object
  synonyms: [String!]
  relatedTerms: [String!]
}

type MainActivity {
  uri: ID!
  code: String
  label: Object
}

type MediaType {
  uri: ID!
  name: String
  type: String
  subType: String
}

type Kommune {
  uri: ID!
  kommunenavn: String
  kommunenavnNorsk: String
  kommunenummer: String
}

type Fylke {
  uri: ID!
  fylkesnavn: String
  fylkesnummer: String
}

type Nasjon {
  uri: ID!
  nasjonsnavn: String
  nasjonsnummer: String
}

type OpenLicense {
  uri: ID!
  code: String
  isReplacedBy: String
  label: Object
}

type ProvenanceStatement {
  uri: ID!
  code: String
  label: Object
}

type ReferenceType {
  uri: ID!
  code: String
  label: Object
}

type RoleType {
  uri: ID!
  code: String
  label: Object
}

type ServiceChannelType {
  uri: ID!
  code: String
  label: Object
}
